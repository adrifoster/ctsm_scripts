#!/usr/bin/env bash

#
# #########################
# Purpose: Create and build a single-point case for CTSM runs
# Author: Adrianna C. Foster
# Date: September, 2021
# bash version 4.2.46
# #########################
# #########################
# Input format: text file
# #########################
# #########################
# Notes: Makes use of the config_parse script. If you want to add more
#        parameters, see the notes for that script.
#        This also assumes you have already subset the correct surface, domain,
#        and datm files. See subset_data.py script.

## Parameters ------------------------------------------------------------------
# CONF              - config file name             (argument for script)
# MACH              - machine (izumi/cheyenne)     (in config file)
# PROJECT           - project code                 (in config file)
# SRCDIR            - CTSM source code directory   (in config file)
# TAG               - name of case                 (in config file)
# SITE              - site name                    (in config file)
# FATES             - use fates or not             (in config file)
# PARAM_FILE        - FATES parameter file         (in config file)
# PARAM_DIR         - FATES param file location    (in config file)
# CASE_DIR          - case directory path          (in config file)
# COMP              - compset for run              (in config file)
# RES               - resolution of run            (in config file)
# STOPN             - how long to run              (in config file)
# RESUBN            - times to resubmit run        (in config file)
# STOPVAL           - units for STOPN              (in config file)
# RESTVAL           - units for RESUBN             (in config file)
# STATDATE          - start date for run           (in config file)
# DATMSTARTYR       - start year to loop datm over (in config file)
# DATMSTOPYR        - end year to loop datm over   (in config file)
# DATMMODE          - mode for data atm. component (in config file)
# CLM_USRDAT_DOMAIN - subset domain file           (in config file)
# CLM_DOMAIN_DIR    - subset domain location       (in config file)
# CLM_SURFDAT_DIR   - subset surface data location (in config file)
# CLM_USRDAT_SURDAT - subset surface data file     (in config file)
# USER_DATM_DIR     - location of datm.streams*    (in config file)
# WALL_TIME         - wallclock time               (in config file)


## Config file name
if [ $# -eq 0 ]
  then
    echo "Enter config file name"
    read CONF
  else
    CONF=$1
fi

## Parse the config file to get parameters
source config_parse ${CONF}

## Get CTSM git version - this will go into case name
cd ${SRCDIR}
githashctsm=`git log -n 1 --format=%h`

## Get the FATES git version if running fates - this will also go into case name
if [[ "$FATES" == "1" ]]
then
  cd src/fates
  githashfates=`git log -n 1 --format=%h`

  ## Create case name with ctsm and fates githash
  case_name=${CASE_DIR}/${TAG}_${githashctsm}_${githashfates}
else
  ## Create case name with just ctsm githash
  case_name=${CASE_DIR}/${TAG}_${githashctsm}
fi

## Define CIME directory
base_dir=${SRCDIR}/cime/scripts

## Create the case
cd ${base_dir}
./create_newcase --case ${case_name} --res ${RES} --compset ${COMP} --project ${PROJECT} --run-unsupported --mach ${MACH}

cd ${case_name}

## Modify env_mach_pes file
## Increase to 8 nodes
./xmlchange NTASKS_ATM=1
./xmlchange NTASKS_LND=1
./xmlchange NTASKS_ROF=1
./xmlchange NTASKS_ICE=1
./xmlchange NTASKS_OCN=1
./xmlchange NTASKS_CPL=1
./xmlchange NTASKS_GLC=1
./xmlchange NTASKS_WAV=1
./xmlchange NTASKS_ESP=1

./xmlchange NTHRDS_ATM=1
./xmlchange NTHRDS_LND=1
./xmlchange NTHRDS_ROF=1
./xmlchange NTHRDS_ICE=1
./xmlchange NTHRDS_OCN=1
./xmlchange NTHRDS_CPL=1
./xmlchange NTHRDS_GLC=1
./xmlchange NTHRDS_WAV=1
./xmlchange NTHRDS_ESP=1

./xmlchange ROOTPE_ATM=0
./xmlchange ROOTPE_LND=0
./xmlchange ROOTPE_ROF=0
./xmlchange ROOTPE_ICE=0
./xmlchange ROOTPE_OCN=0
./xmlchange ROOTPE_CPL=0
./xmlchange ROOTPE_GLC=0
./xmlchange ROOTPE_WAV=0
./xmlchange ROOTPE_ESP=0

## Must do this for single-point runs
./xmlchange MPILIB=mpi-serial

## Run case-setup
./case.setup

## Modify env_run parameters - can add more parameters using the config_parse
## script
## Note for variables that require quotes you must use the double then single
## quotes approach for it to work.
./xmlchange --id STOP_N --val ${STOPN}
./xmlchange --id RUN_STARTDATE --val $STARTDATE
./xmlchange --id STOP_OPTION --val ${STOPVAL}
./xmlchange --id REST_OPTION --val ${RESTVAL}
./xmlchange --id RESUBMIT --val ${RESUBN}
./xmlchange --id CLM_FORCE_COLDSTART --val on
./xmlchange --id JOB_WALLCLOCK_TIME --val ${WALL_TIME}
./xmlchange --id DATM_CLMNCEP_YR_ALIGN --val ${DATMSTARTYR}
./xmlchange --id DATM_CLMNCEP_YR_START --val ${DATMSTARTYR}
./xmlchange --id DATM_CLMNCEP_YR_END --val ${DATMSTOPYR}
./xmlchange --id DATM_MODE --val ${DATMMODE}
./xmlchange --id LND_DOMAIN_FILE --val ${CLM_USRDAT_DOMAIN}
./xmlchange --id LND_DOMAIN_PATH --val ${CLM_DOMAIN_DIR}
./xmlchange --id ATM_DOMAIN_FILE --val ${CLM_USRDAT_DOMAIN}
./xmlchange --id ATM_DOMAIN_PATH --val ${CLM_DOMAIN_DIR}
./xmlchange --id MOSART_MODE --val NULL

## Need jobqueue for running on izumi
if [[ "$MACH" == "izumi" ]]
then
  ./xmlchange --id JOB_QUEUE --val verylong
fi


## Update the user_nl_datm file
cat > user_nl_datm <<EOF
mapalgo = 'nn','nn','nn','nn','nn'
EOF

## Update the user_nl_clm file
## the fsurdat is used for updating the surface dataset file for
## singlepoint runs

if [[ "$FATES" == "1" ]]
then

cat > user_nl_clm <<EOF
fsurdat = '${CLM_SURFDAT_DIR}/${CLM_USRDAT_SURDAT}'
use_fates=.true.
fates_parteh_mode=1
fates_spitfire_mode=0
EOF

else
cat > user_nl_clm <<EOF
fsurdat = '${CLM_SURFDAT_DIR}/${CLM_USRDAT_SURDAT}'
EOF

fi

## Build the case
./case.build
./case.submit
